<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd   
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- JNDI获取数据源(使用dbcp连接池) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<!-- sql 心跳 -->
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="numTestsPerEvictionRun" value="${maxActive}" />
	</bean>

	<!-- 扫描指定包下的所有类,让标注Spring注解的类生效 -->
	<context:component-scan base-package="cn.smbms.service" />
	<context:component-scan base-package="cn.smbms.dao" />
	<!-- 声明增强方法所在的Bean 设置输出调用日志方法 -->
	<!-- <context:component-scan base-package="cn.smbms.aop"/> -->

	<!-- <bean id="daoLogger" class="cn.smbms.aop.DaoLogger"/> -->

	<!-- 读取数据库配置文件 -->
	<context:property-placeholder location="classpath:database.properties" />



	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>



	<aop:aspectj-autoproxy />

	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* *cn.smbms.service..*(..))"
			id="transService" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transService" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="smbms*" propagation="REQUIRED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源组件 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 引用MyBatis配置文件中的配置 -->
		<property name="typeAliasesPackage" value="cn.smbms.pojo" />
		<!-- 配置SQL映射文件信息 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:cn/smbms/dao/**/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- 它将会查找类路径下的映射器并自动将它们创建成MapperFactoryBean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.smbms.dao" />
	</bean>
</beans>